Pettier вызывается ctrl или command-shift-p;
Слева от выражения может стоять только индетификатор;
Имя идентификатора может состоять из: A-Z a-z _ $ ;
Используем camelCase - первое слово в идентефикаторе с маленькой, последующие - с большой;
Комментарии: однострочные - //, многострочные /**/;
ВСЕГДА ставим ";" ;
let - объявляем переменную
Переменным, объявленным через const нельзя менять содержимое;
Объявляем переменные сверху вниз, компилтор ищет их значения снизу вверх;
По умолчанию везде объявляем переменные через const;
!Значение переменной имеет тип, а не сама переменная!;
Дробные числа пишутся через точку;
Строка в js - просто последовательность символов между '' или "";
name - даем имя 
true or false - флажки 
null - ничтоб, пустота (отмена ввода, к примеру);
typeof - возвращает тип строки: черный - строка, синий - число;
alert - вывод диалогового окна в браузере;
!Пока выполняется alert - всё остальное висит!
promt - вызывает строку, забирает с неё то что в неё ввели, чему, в свою очередь, можно присвоить переменную;
promt можно описать ('');
!promt всегда возвращает строку!;
При cancel promt выводит null;
!promt тоже вешает исполнение скрипта!;
confrim - флажек для false или true, используется для потверждения действия;
+ - * / % это операторы;
% - остаток от деления;
То, к чему используются операторы - операнды;
result - выводит решение;
При выражениях с <> result выводит true or false;
= - операция присваивания, == - операция сравнения, != - неравенство;
!НИКОГДА НЕ ИСПОЛЬЗУЕМ НЕСТРОГИЕ!
!Но мы ВСЕГДА используем СТРОГОЕ РАВЕНСТВО ===!;
Строгое равенство в отличии от нестрогого учитывает еще и типы данных а не только их значения;
Для того что бы преобразовать что-нибуть в строку - вызываем const #variable_name = String(true);
Если преобразовать в число - Number;
Если браузер не может преобразовать строку в число - Number выведет значение NaN(Not a Number);
!НИКОГДА не использовать для этого унарный плюс - + перед строкой!;
Если задать number true или false - он вернет, соответственно, 1 или 0;